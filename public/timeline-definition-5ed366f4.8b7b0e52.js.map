{"mappings":"C,A,kC;A,uC;A,E;A,2D;A,E;A,4D;A,wD;A,S,C,C,C,C,C,C,C,C,C,E,2B,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,0D;A,+D;A,8B;A,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,E,gE;A,6D;A,+D;A,gC;A,G,E,O,E,E,C,E,+C;A,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,qD;A,yE;A,I,E,E,E,Y;A,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,C,O,W,O,C,G,G,C,I,C,E,C,C,C,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCsuCA,EAAA,MAAA,CAAA,EAAA,UAAA,IACE,GAvuCF,IAAA,EAAA,EAAA,yBACA,EAAA,EAAA,MACA,EAAA,EAAA,UACA,EAAA,aACA,EAAA,SACA,EAAA,2BACA,EAAA,aACA,EAAA,wBACA,EAAA,UACA,EAAA,wBACA,IAAI,EAAS,WACX,IAAI,EAAI,SAAS,CAAC,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC,EAC1B,IAAK,EAAK,GAAM,CAAC,EAAG,EAAI,EAAE,MAAA,CAAQ,IAAK,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAG,GAEl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","sources":["<anon>","node_modules/mermaid/dist/timeline-definition-5ed366f4.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"fvjN3\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"diagram\", ()=>diagram);\nvar _mermaidB0Ad2De1Js = require(\"./mermaid-b0ad2de1.js\");\nvar _d3 = require(\"d3\");\nvar _khroma = require(\"khroma\");\nvar _tsDedent = require(\"ts-dedent\");\nvar _dayjs = require(\"dayjs\");\nvar _sanitizeUrl = require(\"@braintree/sanitize-url\");\nvar _dompurify = require(\"dompurify\");\nvar _memoizeJs = require(\"lodash-es/memoize.js\");\nvar _stylis = require(\"stylis\");\nvar _isEmptyJs = require(\"lodash-es/isEmpty.js\");\nvar parser = function() {\n    var o = function(k, v, o2, l) {\n        for(o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n        return o2;\n    }, $V0 = [\n        1,\n        2\n    ], $V1 = [\n        1,\n        5\n    ], $V2 = [\n        6,\n        9,\n        11,\n        17,\n        18,\n        20,\n        22,\n        23,\n        26,\n        27,\n        28\n    ], $V3 = [\n        1,\n        15\n    ], $V4 = [\n        1,\n        16\n    ], $V5 = [\n        1,\n        17\n    ], $V6 = [\n        1,\n        18\n    ], $V7 = [\n        1,\n        19\n    ], $V8 = [\n        1,\n        23\n    ], $V9 = [\n        1,\n        24\n    ], $Va = [\n        1,\n        27\n    ], $Vb = [\n        4,\n        6,\n        9,\n        11,\n        17,\n        18,\n        20,\n        22,\n        23,\n        26,\n        27,\n        28\n    ];\n    var parser2 = {\n        trace: function trace() {},\n        yy: {},\n        symbols_: {\n            \"error\": 2,\n            \"start\": 3,\n            \"timeline\": 4,\n            \"document\": 5,\n            \"EOF\": 6,\n            \"directive\": 7,\n            \"line\": 8,\n            \"SPACE\": 9,\n            \"statement\": 10,\n            \"NEWLINE\": 11,\n            \"openDirective\": 12,\n            \"typeDirective\": 13,\n            \"closeDirective\": 14,\n            \":\": 15,\n            \"argDirective\": 16,\n            \"title\": 17,\n            \"acc_title\": 18,\n            \"acc_title_value\": 19,\n            \"acc_descr\": 20,\n            \"acc_descr_value\": 21,\n            \"acc_descr_multiline_value\": 22,\n            \"section\": 23,\n            \"period_statement\": 24,\n            \"event_statement\": 25,\n            \"period\": 26,\n            \"event\": 27,\n            \"open_directive\": 28,\n            \"type_directive\": 29,\n            \"arg_directive\": 30,\n            \"close_directive\": 31,\n            \"$accept\": 0,\n            \"$end\": 1\n        },\n        terminals_: {\n            2: \"error\",\n            4: \"timeline\",\n            6: \"EOF\",\n            9: \"SPACE\",\n            11: \"NEWLINE\",\n            15: \":\",\n            17: \"title\",\n            18: \"acc_title\",\n            19: \"acc_title_value\",\n            20: \"acc_descr\",\n            21: \"acc_descr_value\",\n            22: \"acc_descr_multiline_value\",\n            23: \"section\",\n            26: \"period\",\n            27: \"event\",\n            28: \"open_directive\",\n            29: \"type_directive\",\n            30: \"arg_directive\",\n            31: \"close_directive\"\n        },\n        productions_: [\n            0,\n            [\n                3,\n                3\n            ],\n            [\n                3,\n                2\n            ],\n            [\n                5,\n                0\n            ],\n            [\n                5,\n                2\n            ],\n            [\n                8,\n                2\n            ],\n            [\n                8,\n                1\n            ],\n            [\n                8,\n                1\n            ],\n            [\n                8,\n                1\n            ],\n            [\n                7,\n                4\n            ],\n            [\n                7,\n                6\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                10,\n                2\n            ],\n            [\n                10,\n                2\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                10,\n                1\n            ],\n            [\n                24,\n                1\n            ],\n            [\n                25,\n                1\n            ],\n            [\n                12,\n                1\n            ],\n            [\n                13,\n                1\n            ],\n            [\n                16,\n                1\n            ],\n            [\n                14,\n                1\n            ]\n        ],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n            var $0 = $$.length - 1;\n            switch(yystate){\n                case 1:\n                    return $$[$0 - 1];\n                case 3:\n                    this.$ = [];\n                    break;\n                case 4:\n                    $$[$0 - 1].push($$[$0]);\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 5:\n                case 6:\n                    this.$ = $$[$0];\n                    break;\n                case 7:\n                case 8:\n                    this.$ = [];\n                    break;\n                case 11:\n                    yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\n                    this.$ = $$[$0].substr(6);\n                    break;\n                case 12:\n                    this.$ = $$[$0].trim();\n                    yy.getCommonDb().setAccTitle(this.$);\n                    break;\n                case 13:\n                case 14:\n                    this.$ = $$[$0].trim();\n                    yy.getCommonDb().setAccDescription(this.$);\n                    break;\n                case 15:\n                    yy.addSection($$[$0].substr(8));\n                    this.$ = $$[$0].substr(8);\n                    break;\n                case 19:\n                    yy.addTask($$[$0], 0, \"\");\n                    this.$ = $$[$0];\n                    break;\n                case 20:\n                    yy.addEvent($$[$0].substr(2));\n                    this.$ = $$[$0];\n                    break;\n                case 21:\n                    yy.parseDirective(\"%%{\", \"open_directive\");\n                    break;\n                case 22:\n                    yy.parseDirective($$[$0], \"type_directive\");\n                    break;\n                case 23:\n                    $$[$0] = $$[$0].trim().replace(/'/g, '\"');\n                    yy.parseDirective($$[$0], \"arg_directive\");\n                    break;\n                case 24:\n                    yy.parseDirective(\"}%%\", \"close_directive\", \"timeline\");\n                    break;\n            }\n        },\n        table: [\n            {\n                3: 1,\n                4: $V0,\n                7: 3,\n                12: 4,\n                28: $V1\n            },\n            {\n                1: [\n                    3\n                ]\n            },\n            o($V2, [\n                2,\n                3\n            ], {\n                5: 6\n            }),\n            {\n                3: 7,\n                4: $V0,\n                7: 3,\n                12: 4,\n                28: $V1\n            },\n            {\n                13: 8,\n                29: [\n                    1,\n                    9\n                ]\n            },\n            {\n                29: [\n                    2,\n                    21\n                ]\n            },\n            {\n                6: [\n                    1,\n                    10\n                ],\n                7: 22,\n                8: 11,\n                9: [\n                    1,\n                    12\n                ],\n                10: 13,\n                11: [\n                    1,\n                    14\n                ],\n                12: 4,\n                17: $V3,\n                18: $V4,\n                20: $V5,\n                22: $V6,\n                23: $V7,\n                24: 20,\n                25: 21,\n                26: $V8,\n                27: $V9,\n                28: $V1\n            },\n            {\n                1: [\n                    2,\n                    2\n                ]\n            },\n            {\n                14: 25,\n                15: [\n                    1,\n                    26\n                ],\n                31: $Va\n            },\n            o([\n                15,\n                31\n            ], [\n                2,\n                22\n            ]),\n            o($V2, [\n                2,\n                8\n            ], {\n                1: [\n                    2,\n                    1\n                ]\n            }),\n            o($V2, [\n                2,\n                4\n            ]),\n            {\n                7: 22,\n                10: 28,\n                12: 4,\n                17: $V3,\n                18: $V4,\n                20: $V5,\n                22: $V6,\n                23: $V7,\n                24: 20,\n                25: 21,\n                26: $V8,\n                27: $V9,\n                28: $V1\n            },\n            o($V2, [\n                2,\n                6\n            ]),\n            o($V2, [\n                2,\n                7\n            ]),\n            o($V2, [\n                2,\n                11\n            ]),\n            {\n                19: [\n                    1,\n                    29\n                ]\n            },\n            {\n                21: [\n                    1,\n                    30\n                ]\n            },\n            o($V2, [\n                2,\n                14\n            ]),\n            o($V2, [\n                2,\n                15\n            ]),\n            o($V2, [\n                2,\n                16\n            ]),\n            o($V2, [\n                2,\n                17\n            ]),\n            o($V2, [\n                2,\n                18\n            ]),\n            o($V2, [\n                2,\n                19\n            ]),\n            o($V2, [\n                2,\n                20\n            ]),\n            {\n                11: [\n                    1,\n                    31\n                ]\n            },\n            {\n                16: 32,\n                30: [\n                    1,\n                    33\n                ]\n            },\n            {\n                11: [\n                    2,\n                    24\n                ]\n            },\n            o($V2, [\n                2,\n                5\n            ]),\n            o($V2, [\n                2,\n                12\n            ]),\n            o($V2, [\n                2,\n                13\n            ]),\n            o($Vb, [\n                2,\n                9\n            ]),\n            {\n                14: 34,\n                31: $Va\n            },\n            {\n                31: [\n                    2,\n                    23\n                ]\n            },\n            {\n                11: [\n                    1,\n                    35\n                ]\n            },\n            o($Vb, [\n                2,\n                10\n            ])\n        ],\n        defaultActions: {\n            5: [\n                2,\n                21\n            ],\n            7: [\n                2,\n                2\n            ],\n            27: [\n                2,\n                24\n            ],\n            33: [\n                2,\n                23\n            ]\n        },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) this.trace(str);\n            else {\n                var error = new Error(str);\n                error.hash = hash;\n                throw error;\n            }\n        },\n        parse: function parse(input) {\n            var self = this, stack = [\n                0\n            ], tstack = [], vstack = [\n                null\n            ], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer2 = Object.create(this.lexer);\n            var sharedState = {\n                yy: {}\n            };\n            for(var k in this.yy)if (Object.prototype.hasOwnProperty.call(this.yy, k)) sharedState.yy[k] = this.yy[k];\n            lexer2.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer2;\n            sharedState.yy.parser = this;\n            if (typeof lexer2.yylloc == \"undefined\") lexer2.yylloc = {};\n            var yyloc = lexer2.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer2.options && lexer2.options.ranges;\n            if (typeof sharedState.yy.parseError === \"function\") this.parseError = sharedState.yy.parseError;\n            else this.parseError = Object.getPrototypeOf(this).parseError;\n            function lex() {\n                var token;\n                token = tstack.pop() || lexer2.lex() || EOF;\n                if (typeof token !== \"number\") {\n                    if (token instanceof Array) {\n                        tstack = token;\n                        token = tstack.pop();\n                    }\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n            var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n            while(true){\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) action = this.defaultActions[state];\n                else {\n                    if (symbol === null || typeof symbol == \"undefined\") symbol = lex();\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                    var errStr = \"\";\n                    expected = [];\n                    for(p in table[state])if (this.terminals_[p] && p > TERROR) expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    if (lexer2.showPosition) errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                    else errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                    this.parseError(errStr, {\n                        text: lexer2.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer2.yylineno,\n                        loc: yyloc,\n                        expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                switch(action[0]){\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer2.yytext);\n                        lstack.push(lexer2.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        yyleng = lexer2.yyleng;\n                        yytext = lexer2.yytext;\n                        yylineno = lexer2.yylineno;\n                        yyloc = lexer2.yylloc;\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) yyval._$.range = [\n                            lstack[lstack.length - (len || 1)].range[0],\n                            lstack[lstack.length - 1].range[1]\n                        ];\n                        r = this.performAction.apply(yyval, [\n                            yytext,\n                            yyleng,\n                            yylineno,\n                            sharedState.yy,\n                            action[1],\n                            vstack,\n                            lstack\n                        ].concat(args));\n                        if (typeof r !== \"undefined\") return r;\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        }\n    };\n    var lexer = function() {\n        var lexer2 = {\n            EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) this.yy.parser.parseError(str, hash);\n                else throw new Error(str);\n            },\n            // resets the lexer, sets new input\n            setInput: function(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = \"\";\n                this.conditionStack = [\n                    \"INITIAL\"\n                ];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) this.yylloc.range = [\n                    0,\n                    0\n                ];\n                this.offset = 0;\n                return this;\n            },\n            // consumes and returns one char from the input\n            input: function() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else this.yylloc.last_column++;\n                if (this.options.ranges) this.yylloc.range[1]++;\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            // unshifts one char (or a string) into the input\n            unput: function(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n                if (lines.length - 1) this.yylineno -= lines.length - 1;\n                var r = this.yylloc.range;\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n                if (this.options.ranges) this.yylloc.range = [\n                    r[0],\n                    r[0] + this.yyleng - len\n                ];\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n            // When called from action, caches matched text and appends it on next action\n            more: function() {\n                this._more = true;\n                return this;\n            },\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function() {\n                if (this.options.backtrack_lexer) this._backtrack = true;\n                else return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n                    text: \"\",\n                    token: null,\n                    line: this.yylineno\n                });\n                return this;\n            },\n            // retain first n characters of the match\n            less: function(n) {\n                this.unput(this.match.slice(n));\n            },\n            // displays already matched input, i.e. for error messages\n            pastInput: function() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function() {\n                var next = this.match;\n                if (next.length < 20) next += this._input.substr(0, 20 - next.length);\n                return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n            },\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function(match, indexed_rule) {\n                var token, lines, backup;\n                if (this.options.backtrack_lexer) {\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) backup.yylloc.range = this.yylloc.range.slice(0);\n                }\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) this.yylineno += lines.length;\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) this.yylloc.range = [\n                    this.offset,\n                    this.offset += this.yyleng\n                ];\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) this.done = false;\n                if (token) return token;\n                else if (this._backtrack) {\n                    for(var k in backup)this[k] = backup[k];\n                    return false;\n                }\n                return false;\n            },\n            // return next match in input\n            next: function() {\n                if (this.done) return this.EOF;\n                if (!this._input) this.done = true;\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = \"\";\n                    this.match = \"\";\n                }\n                var rules = this._currentRules();\n                for(var i = 0; i < rules.length; i++){\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) return token;\n                            else if (this._backtrack) {\n                                match = false;\n                                continue;\n                            } else return false;\n                        } else if (!this.options.flex) break;\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) return token;\n                    return false;\n                }\n                if (this._input === \"\") return this.EOF;\n                else return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n                    text: \"\",\n                    token: null,\n                    line: this.yylineno\n                });\n            },\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) return r;\n                else return this.lex();\n            },\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) return this.conditionStack.pop();\n                else return this.conditionStack[0];\n            },\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                else return this.conditions[\"INITIAL\"].rules;\n            },\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) return this.conditionStack[n];\n                else return \"INITIAL\";\n            },\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: {\n                \"case-insensitive\": true\n            },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                switch($avoiding_name_collisions){\n                    case 0:\n                        this.begin(\"open_directive\");\n                        return 28;\n                    case 1:\n                        this.begin(\"type_directive\");\n                        return 29;\n                    case 2:\n                        this.popState();\n                        this.begin(\"arg_directive\");\n                        return 15;\n                    case 3:\n                        this.popState();\n                        this.popState();\n                        return 31;\n                    case 4:\n                        return 30;\n                    case 5:\n                        break;\n                    case 6:\n                        break;\n                    case 7:\n                        return 11;\n                    case 8:\n                        break;\n                    case 9:\n                        break;\n                    case 10:\n                        return 4;\n                    case 11:\n                        return 17;\n                    case 12:\n                        this.begin(\"acc_title\");\n                        return 18;\n                    case 13:\n                        this.popState();\n                        return \"acc_title_value\";\n                    case 14:\n                        this.begin(\"acc_descr\");\n                        return 20;\n                    case 15:\n                        this.popState();\n                        return \"acc_descr_value\";\n                    case 16:\n                        this.begin(\"acc_descr_multiline\");\n                        break;\n                    case 17:\n                        this.popState();\n                        break;\n                    case 18:\n                        return \"acc_descr_multiline_value\";\n                    case 19:\n                        return 23;\n                    case 20:\n                        return 27;\n                    case 21:\n                        return 26;\n                    case 22:\n                        return 6;\n                    case 23:\n                        return \"INVALID\";\n                }\n            },\n            rules: [\n                /^(?:%%\\{)/i,\n                /^(?:((?:(?!\\}%%)[^:.])*))/i,\n                /^(?::)/i,\n                /^(?:\\}%%)/i,\n                /^(?:((?:(?!\\}%%).|\\n)*))/i,\n                /^(?:%(?!\\{)[^\\n]*)/i,\n                /^(?:[^\\}]%%[^\\n]*)/i,\n                /^(?:[\\n]+)/i,\n                /^(?:\\s+)/i,\n                /^(?:#[^\\n]*)/i,\n                /^(?:timeline\\b)/i,\n                /^(?:title\\s[^#\\n;]+)/i,\n                /^(?:accTitle\\s*:\\s*)/i,\n                /^(?:(?!\\n||)*[^\\n]*)/i,\n                /^(?:accDescr\\s*:\\s*)/i,\n                /^(?:(?!\\n||)*[^\\n]*)/i,\n                /^(?:accDescr\\s*\\{\\s*)/i,\n                /^(?:[\\}])/i,\n                /^(?:[^\\}]*)/i,\n                /^(?:section\\s[^#:\\n;]+)/i,\n                /^(?::\\s[^#:\\n;]+)/i,\n                /^(?:[^#:\\n;]+)/i,\n                /^(?:$)/i,\n                /^(?:.)/i\n            ],\n            conditions: {\n                \"open_directive\": {\n                    \"rules\": [\n                        1\n                    ],\n                    \"inclusive\": false\n                },\n                \"type_directive\": {\n                    \"rules\": [\n                        2,\n                        3\n                    ],\n                    \"inclusive\": false\n                },\n                \"arg_directive\": {\n                    \"rules\": [\n                        3,\n                        4\n                    ],\n                    \"inclusive\": false\n                },\n                \"acc_descr_multiline\": {\n                    \"rules\": [\n                        17,\n                        18\n                    ],\n                    \"inclusive\": false\n                },\n                \"acc_descr\": {\n                    \"rules\": [\n                        15\n                    ],\n                    \"inclusive\": false\n                },\n                \"acc_title\": {\n                    \"rules\": [\n                        13\n                    ],\n                    \"inclusive\": false\n                },\n                \"INITIAL\": {\n                    \"rules\": [\n                        0,\n                        5,\n                        6,\n                        7,\n                        8,\n                        9,\n                        10,\n                        11,\n                        12,\n                        14,\n                        16,\n                        19,\n                        20,\n                        21,\n                        22,\n                        23\n                    ],\n                    \"inclusive\": true\n                }\n            }\n        };\n        return lexer2;\n    }();\n    parser2.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser2;\n    parser2.Parser = Parser;\n    return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet currentSection = \"\";\nlet currentTaskId = 0;\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\nconst getCommonDb = ()=>(0, _mermaidB0Ad2De1Js.I);\nconst parseDirective = (statement, context, type)=>{\n    (0, _mermaidB0Ad2De1Js.J)(globalThis, statement, context, type);\n};\nconst clear = function() {\n    sections.length = 0;\n    tasks.length = 0;\n    currentSection = \"\";\n    rawTasks.length = 0;\n    (0, _mermaidB0Ad2De1Js.v)();\n};\nconst addSection = function(txt) {\n    currentSection = txt;\n    sections.push(txt);\n};\nconst getSections = function() {\n    return sections;\n};\nconst getTasks = function() {\n    let allItemsProcessed = compileTasks();\n    const maxDepth = 100;\n    let iterationCount = 0;\n    while(!allItemsProcessed && iterationCount < maxDepth){\n        allItemsProcessed = compileTasks();\n        iterationCount++;\n    }\n    tasks.push(...rawTasks);\n    return tasks;\n};\nconst addTask = function(period, length, event) {\n    const rawTask = {\n        id: currentTaskId++,\n        section: currentSection,\n        type: currentSection,\n        task: period,\n        score: length ? length : 0,\n        //if event is defined, then add it the events array\n        events: event ? [\n            event\n        ] : []\n    };\n    rawTasks.push(rawTask);\n};\nconst addEvent = function(event) {\n    const currentTask = rawTasks.find((task)=>task.id === currentTaskId - 1);\n    currentTask.events.push(event);\n};\nconst addTaskOrg = function(descr) {\n    const newTask = {\n        section: currentSection,\n        type: currentSection,\n        description: descr,\n        task: descr,\n        classes: []\n    };\n    tasks.push(newTask);\n};\nconst compileTasks = function() {\n    const compileTask = function(pos) {\n        return rawTasks[pos].processed;\n    };\n    let allProcessed = true;\n    for (const [i, rawTask] of rawTasks.entries()){\n        compileTask(i);\n        allProcessed = allProcessed && rawTask.processed;\n    }\n    return allProcessed;\n};\nconst timelineDb = {\n    clear,\n    getCommonDb,\n    addSection,\n    getSections,\n    getTasks,\n    addTask,\n    addTaskOrg,\n    addEvent,\n    parseDirective\n};\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n    __proto__: null,\n    addEvent,\n    addSection,\n    addTask,\n    addTaskOrg,\n    clear,\n    default: timelineDb,\n    getCommonDb,\n    getSections,\n    getTasks,\n    parseDirective\n}, Symbol.toStringTag, {\n    value: \"Module\"\n}));\nconst MAX_SECTIONS = 12;\nconst drawRect = function(elem, rectData) {\n    const rectElem = elem.append(\"rect\");\n    rectElem.attr(\"x\", rectData.x);\n    rectElem.attr(\"y\", rectData.y);\n    rectElem.attr(\"fill\", rectData.fill);\n    rectElem.attr(\"stroke\", rectData.stroke);\n    rectElem.attr(\"width\", rectData.width);\n    rectElem.attr(\"height\", rectData.height);\n    rectElem.attr(\"rx\", rectData.rx);\n    rectElem.attr(\"ry\", rectData.ry);\n    if (rectData.class !== void 0) rectElem.attr(\"class\", rectData.class);\n    return rectElem;\n};\nconst drawFace = function(element, faceData) {\n    const radius = 15;\n    const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\n    const face = element.append(\"g\");\n    face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n    face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n    function smile(face2) {\n        const arc$1 = (0, _d3.arc)().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n        face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\n    }\n    function sad(face2) {\n        const arc$1 = (0, _d3.arc)().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n        face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\n    }\n    function ambivalent(face2) {\n        face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\n    }\n    if (faceData.score > 3) smile(face);\n    else if (faceData.score < 3) sad(face);\n    else ambivalent(face);\n    return circleElement;\n};\nconst drawCircle = function(element, circleData) {\n    const circleElement = element.append(\"circle\");\n    circleElement.attr(\"cx\", circleData.cx);\n    circleElement.attr(\"cy\", circleData.cy);\n    circleElement.attr(\"class\", \"actor-\" + circleData.pos);\n    circleElement.attr(\"fill\", circleData.fill);\n    circleElement.attr(\"stroke\", circleData.stroke);\n    circleElement.attr(\"r\", circleData.r);\n    if (circleElement.class !== void 0) circleElement.attr(\"class\", circleElement.class);\n    if (circleData.title !== void 0) circleElement.append(\"title\").text(circleData.title);\n    return circleElement;\n};\nconst drawText = function(elem, textData) {\n    const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n    const textElem = elem.append(\"text\");\n    textElem.attr(\"x\", textData.x);\n    textElem.attr(\"y\", textData.y);\n    textElem.attr(\"class\", \"legend\");\n    textElem.style(\"text-anchor\", textData.anchor);\n    if (textData.class !== void 0) textElem.attr(\"class\", textData.class);\n    const span = textElem.append(\"tspan\");\n    span.attr(\"x\", textData.x + textData.textMargin * 2);\n    span.text(nText);\n    return textElem;\n};\nconst drawLabel = function(elem, txtObject) {\n    function genPoints(x, y, width, height, cut) {\n        return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n    }\n    const polygon = elem.append(\"polygon\");\n    polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n    polygon.attr(\"class\", \"labelBox\");\n    txtObject.y = txtObject.y + txtObject.labelMargin;\n    txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n    drawText(elem, txtObject);\n};\nconst drawSection = function(elem, section, conf) {\n    const g = elem.append(\"g\");\n    const rect = getNoteRect();\n    rect.x = section.x;\n    rect.y = section.y;\n    rect.fill = section.fill;\n    rect.width = conf.width;\n    rect.height = conf.height;\n    rect.class = \"journey-section section-type-\" + section.num;\n    rect.rx = 3;\n    rect.ry = 3;\n    drawRect(g, rect);\n    _drawTextCandidateFunc(conf)(section.text, g, rect.x, rect.y, rect.width, rect.height, {\n        class: \"journey-section section-type-\" + section.num\n    }, conf, section.colour);\n};\nlet taskCount = -1;\nconst drawTask = function(elem, task, conf) {\n    const center = task.x + conf.width / 2;\n    const g = elem.append(\"g\");\n    taskCount++;\n    const maxHeight = 450;\n    g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\n    drawFace(g, {\n        cx: center,\n        cy: 300 + (5 - task.score) * 30,\n        score: task.score\n    });\n    const rect = getNoteRect();\n    rect.x = task.x;\n    rect.y = task.y;\n    rect.fill = task.fill;\n    rect.width = conf.width;\n    rect.height = conf.height;\n    rect.class = \"task task-type-\" + task.num;\n    rect.rx = 3;\n    rect.ry = 3;\n    drawRect(g, rect);\n    task.x;\n    _drawTextCandidateFunc(conf)(task.task, g, rect.x, rect.y, rect.width, rect.height, {\n        class: \"task\"\n    }, conf, task.colour);\n};\nconst drawBackgroundRect = function(elem, bounds) {\n    const rectElem = drawRect(elem, {\n        x: bounds.startx,\n        y: bounds.starty,\n        width: bounds.stopx - bounds.startx,\n        height: bounds.stopy - bounds.starty,\n        fill: bounds.fill,\n        class: \"rect\"\n    });\n    rectElem.lower();\n};\nconst getTextObj = function() {\n    return {\n        x: 0,\n        y: 0,\n        fill: void 0,\n        \"text-anchor\": \"start\",\n        width: 100,\n        height: 100,\n        textMargin: 0,\n        rx: 0,\n        ry: 0\n    };\n};\nconst getNoteRect = function() {\n    return {\n        x: 0,\n        y: 0,\n        width: 100,\n        anchor: \"start\",\n        height: 100,\n        rx: 0,\n        ry: 0\n    };\n};\nconst _drawTextCandidateFunc = function() {\n    function byText(content, g, x, y, width, height, textAttrs, colour) {\n        const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\n        _setTextAttrs(text, textAttrs);\n    }\n    function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n        const { taskFontSize , taskFontFamily  } = conf;\n        const lines = content.split(/<br\\s*\\/?>/gi);\n        for(let i = 0; i < lines.length; i++){\n            const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\n            const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\n            text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n            text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n            _setTextAttrs(text, textAttrs);\n        }\n    }\n    function byFo(content, g, x, y, width, height, textAttrs, conf) {\n        const body = g.append(\"switch\");\n        const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\n        const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n        text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n        byTspan(content, body, x, y, width, height, textAttrs, conf);\n        _setTextAttrs(text, textAttrs);\n    }\n    function _setTextAttrs(toText, fromTextAttrsDict) {\n        for(const key in fromTextAttrsDict)if (key in fromTextAttrsDict) toText.attr(key, fromTextAttrsDict[key]);\n    }\n    return function(conf) {\n        return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\n    };\n}();\nconst initGraphics = function(graphics) {\n    graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\n};\nfunction wrap(text, width) {\n    text.each(function() {\n        var text2 = (0, _d3.select)(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        for(let j = 0; j < words.length; j++){\n            word = words[words.length - 1 - j];\n            line.push(word);\n            tspan.text(line.join(\" \").trim());\n            if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n                line.pop();\n                tspan.text(line.join(\" \").trim());\n                if (word === \"<br>\") line = [\n                    \"\"\n                ];\n                else line = [\n                    word\n                ];\n                tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n            }\n        }\n    });\n}\nconst drawNode = function(elem, node, fullSection, conf) {\n    const section = fullSection % MAX_SECTIONS - 1;\n    const nodeElem = elem.append(\"g\");\n    node.section = section;\n    nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section));\n    const bkgElem = nodeElem.append(\"g\");\n    const textElem = nodeElem.append(\"g\");\n    const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n    const bbox = txt.node().getBBox();\n    const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n    node.height = bbox.height + fontSize * 0.55 + node.padding;\n    node.height = Math.max(node.height, node.maxHeight);\n    node.width = node.width + 2 * node.padding;\n    textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n    defaultBkg(bkgElem, node, section);\n    return node;\n};\nconst getVirtualNodeHeight = function(elem, node, conf) {\n    const textElem = elem.append(\"g\");\n    const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n    const bbox = txt.node().getBBox();\n    const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n    textElem.remove();\n    return bbox.height + fontSize * 0.55 + node.padding;\n};\nconst defaultBkg = function(elem, node, section) {\n    const rd = 5;\n    elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\"d\", `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`);\n    elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst svgDraw = {\n    drawRect,\n    drawCircle,\n    drawSection,\n    drawText,\n    drawLabel,\n    drawTask,\n    drawBackgroundRect,\n    getTextObj,\n    getNoteRect,\n    initGraphics,\n    drawNode,\n    getVirtualNodeHeight\n};\nconst draw = function(text, id, version, diagObj) {\n    var _a, _b, _c, _d;\n    const conf = (0, _mermaidB0Ad2De1Js.c)();\n    const LEFT_MARGIN = conf.leftMargin ?? 50;\n    (_b = (_a = diagObj.db).clear) == null || _b.call(_a);\n    diagObj.parser.parse(text + \"\\n\");\n    (0, _mermaidB0Ad2De1Js.l).debug(\"timeline\", diagObj.db);\n    const securityLevel = conf.securityLevel;\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, _d3.select)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? // @ts-ignore d3 types are wrong\n    (0, _d3.select)(sandboxElement.nodes()[0].contentDocument.body) : (0, _d3.select)(\"body\");\n    const svg = root.select(\"#\" + id);\n    svg.append(\"g\");\n    const tasks2 = diagObj.db.getTasks();\n    const title = diagObj.db.getCommonDb().getDiagramTitle();\n    (0, _mermaidB0Ad2De1Js.l).debug(\"task\", tasks2);\n    svgDraw.initGraphics(svg);\n    const sections2 = diagObj.db.getSections();\n    (0, _mermaidB0Ad2De1Js.l).debug(\"sections\", sections2);\n    let maxSectionHeight = 0;\n    let maxTaskHeight = 0;\n    let depthY = 0;\n    let sectionBeginY = 0;\n    let masterX = 50 + LEFT_MARGIN;\n    let masterY = 50;\n    sectionBeginY = 50;\n    let sectionNumber = 0;\n    let hasSections = true;\n    sections2.forEach(function(section) {\n        const sectionNode = {\n            number: sectionNumber,\n            descr: section,\n            section: sectionNumber,\n            width: 150,\n            padding: 20,\n            maxHeight: maxSectionHeight\n        };\n        const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n        (0, _mermaidB0Ad2De1Js.l).debug(\"sectionHeight before draw\", sectionHeight);\n        maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n    });\n    let maxEventCount = 0;\n    let maxEventLineLength = 0;\n    (0, _mermaidB0Ad2De1Js.l).debug(\"tasks.length\", tasks2.length);\n    for (const [i, task] of tasks2.entries()){\n        const taskNode = {\n            number: i,\n            descr: task,\n            section: task.section,\n            width: 150,\n            padding: 20,\n            maxHeight: maxTaskHeight\n        };\n        const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n        (0, _mermaidB0Ad2De1Js.l).debug(\"taskHeight before draw\", taskHeight);\n        maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n        maxEventCount = Math.max(maxEventCount, task.events.length);\n        let maxEventLineLengthTemp = 0;\n        for(let j = 0; j < task.events.length; j++){\n            const event = task.events[j];\n            const eventNode = {\n                descr: event,\n                section: task.section,\n                number: task.section,\n                width: 150,\n                padding: 20,\n                maxHeight: 50\n            };\n            maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n        }\n        maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n    }\n    (0, _mermaidB0Ad2De1Js.l).debug(\"maxSectionHeight before draw\", maxSectionHeight);\n    (0, _mermaidB0Ad2De1Js.l).debug(\"maxTaskHeight before draw\", maxTaskHeight);\n    if (sections2 && sections2.length > 0) sections2.forEach((section)=>{\n        const tasksForSection = tasks2.filter((task)=>task.section === section);\n        const sectionNode = {\n            number: sectionNumber,\n            descr: section,\n            section: sectionNumber,\n            width: 200 * Math.max(tasksForSection.length, 1) - 50,\n            padding: 20,\n            maxHeight: maxSectionHeight\n        };\n        (0, _mermaidB0Ad2De1Js.l).debug(\"sectionNode\", sectionNode);\n        const sectionNodeWrapper = svg.append(\"g\");\n        const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n        (0, _mermaidB0Ad2De1Js.l).debug(\"sectionNode output\", node);\n        sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\n        masterY += maxSectionHeight + 50;\n        if (tasksForSection.length > 0) drawTasks(svg, tasksForSection, sectionNumber, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, false);\n        masterX += 200 * Math.max(tasksForSection.length, 1);\n        masterY = sectionBeginY;\n        sectionNumber++;\n    });\n    else {\n        hasSections = false;\n        drawTasks(svg, tasks2, sectionNumber, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, true);\n    }\n    const box = svg.node().getBBox();\n    (0, _mermaidB0Ad2De1Js.l).debug(\"bounds\", box);\n    if (title) svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\n    depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n    const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n    lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\n    (0, _mermaidB0Ad2De1Js.p)(void 0, svg, ((_c = conf.timeline) == null ? void 0 : _c.padding) ?? 50, ((_d = conf.timeline) == null ? void 0 : _d.useMaxWidth) ?? false);\n};\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\n    var _a;\n    for (const task of tasks2){\n        const taskNode = {\n            descr: task.task,\n            section: sectionColor,\n            number: sectionColor,\n            width: 150,\n            padding: 20,\n            maxHeight: maxTaskHeight\n        };\n        (0, _mermaidB0Ad2De1Js.l).debug(\"taskNode\", taskNode);\n        const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\n        const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n        const taskHeight = node.height;\n        (0, _mermaidB0Ad2De1Js.l).debug(\"taskHeight after draw\", taskHeight);\n        taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n        maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n        if (task.events) {\n            const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\n            let lineLength = maxTaskHeight;\n            masterY += 100;\n            lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\n            masterY -= 100;\n            lineWrapper.append(\"line\").attr(\"x1\", masterX + 95).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 95).attr(\"y2\", masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\n        }\n        masterX = masterX + 200;\n        if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) sectionColor++;\n    }\n    masterY = masterY - 10;\n};\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\n    let maxEventHeight = 0;\n    const eventBeginY = masterY;\n    masterY = masterY + 100;\n    for (const event of events){\n        const eventNode = {\n            descr: event,\n            section: sectionColor,\n            number: sectionColor,\n            width: 150,\n            padding: 20,\n            maxHeight: 50\n        };\n        (0, _mermaidB0Ad2De1Js.l).debug(\"eventNode\", eventNode);\n        const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\n        const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n        const eventHeight = node.height;\n        maxEventHeight = maxEventHeight + eventHeight;\n        eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n        masterY = masterY + 10 + eventHeight;\n    }\n    masterY = eventBeginY;\n    return maxEventHeight;\n};\nconst renderer = {\n    setConf: ()=>{},\n    draw\n};\nconst genSections = (options)=>{\n    let sections2 = \"\";\n    for(let i = 0; i < options.THEME_COLOR_LIMIT; i++){\n        options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n        if ((0, _khroma.isDark)(options[\"lineColor\" + i])) options[\"lineColor\" + i] = (0, _khroma.lighten)(options[\"lineColor\" + i], 20);\n        else options[\"lineColor\" + i] = (0, _khroma.darken)(options[\"lineColor\" + i], 20);\n    }\n    for(let i = 0; i < options.THEME_COLOR_LIMIT; i++){\n        const sw = \"\" + (17 - 3 * i);\n        sections2 += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options[\"cScaleLabel\" + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n    }\n    return sections2;\n};\nconst getStyles = (options)=>`\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n    db,\n    renderer,\n    parser: parser$1,\n    styles\n};\n\n},{\"./mermaid-b0ad2de1.js\":\"42V0c\",\"d3\":\"ahWNw\",\"khroma\":\"kb6Zw\",\"ts-dedent\":\"azOLv\",\"dayjs\":\"8F3kd\",\"@braintree/sanitize-url\":\"eIPUt\",\"dompurify\":\"5cPaM\",\"lodash-es/memoize.js\":\"kSZfU\",\"stylis\":\"lfeQC\",\"lodash-es/isEmpty.js\":\"941eg\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}]},[], null, \"parcelRequire9da7\")\n\n//# sourceMappingURL=timeline-definition-5ed366f4.8b7b0e52.js.map\n","import { I as commonDb, J as parseDirective$1, v as clear$1, c as getConfig, l as log, p as setupGraphViewbox } from \"./mermaid-b0ad2de1.js\";\nimport { select, arc } from \"d3\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 2], $V1 = [1, 5], $V2 = [6, 9, 11, 17, 18, 20, 22, 23, 26, 27, 28], $V3 = [1, 15], $V4 = [1, 16], $V5 = [1, 17], $V6 = [1, 18], $V7 = [1, 19], $V8 = [1, 23], $V9 = [1, 24], $Va = [1, 27], $Vb = [4, 6, 9, 11, 17, 18, 20, 22, 23, 26, 27, 28];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"timeline\": 4, \"document\": 5, \"EOF\": 6, \"directive\": 7, \"line\": 8, \"SPACE\": 9, \"statement\": 10, \"NEWLINE\": 11, \"openDirective\": 12, \"typeDirective\": 13, \"closeDirective\": 14, \":\": 15, \"argDirective\": 16, \"title\": 17, \"acc_title\": 18, \"acc_title_value\": 19, \"acc_descr\": 20, \"acc_descr_value\": 21, \"acc_descr_multiline_value\": 22, \"section\": 23, \"period_statement\": 24, \"event_statement\": 25, \"period\": 26, \"event\": 27, \"open_directive\": 28, \"type_directive\": 29, \"arg_directive\": 30, \"close_directive\": 31, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"timeline\", 6: \"EOF\", 9: \"SPACE\", 11: \"NEWLINE\", 15: \":\", 17: \"title\", 18: \"acc_title\", 19: \"acc_title_value\", 20: \"acc_descr\", 21: \"acc_descr_value\", 22: \"acc_descr_multiline_value\", 23: \"section\", 26: \"period\", 27: \"event\", 28: \"open_directive\", 29: \"type_directive\", 30: \"arg_directive\", 31: \"close_directive\" },\n    productions_: [0, [3, 3], [3, 2], [5, 0], [5, 2], [8, 2], [8, 1], [8, 1], [8, 1], [7, 4], [7, 6], [10, 1], [10, 2], [10, 2], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [24, 1], [25, 1], [12, 1], [13, 1], [16, 1], [14, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 1:\n          return $$[$0 - 1];\n        case 3:\n          this.$ = [];\n          break;\n        case 4:\n          $$[$0 - 1].push($$[$0]);\n          this.$ = $$[$0 - 1];\n          break;\n        case 5:\n        case 6:\n          this.$ = $$[$0];\n          break;\n        case 7:\n        case 8:\n          this.$ = [];\n          break;\n        case 11:\n          yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\n          this.$ = $$[$0].substr(6);\n          break;\n        case 12:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccTitle(this.$);\n          break;\n        case 13:\n        case 14:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccDescription(this.$);\n          break;\n        case 15:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 19:\n          yy.addTask($$[$0], 0, \"\");\n          this.$ = $$[$0];\n          break;\n        case 20:\n          yy.addEvent($$[$0].substr(2));\n          this.$ = $$[$0];\n          break;\n        case 21:\n          yy.parseDirective(\"%%{\", \"open_directive\");\n          break;\n        case 22:\n          yy.parseDirective($$[$0], \"type_directive\");\n          break;\n        case 23:\n          $$[$0] = $$[$0].trim().replace(/'/g, '\"');\n          yy.parseDirective($$[$0], \"arg_directive\");\n          break;\n        case 24:\n          yy.parseDirective(\"}%%\", \"close_directive\", \"timeline\");\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: $V0, 7: 3, 12: 4, 28: $V1 }, { 1: [3] }, o($V2, [2, 3], { 5: 6 }), { 3: 7, 4: $V0, 7: 3, 12: 4, 28: $V1 }, { 13: 8, 29: [1, 9] }, { 29: [2, 21] }, { 6: [1, 10], 7: 22, 8: 11, 9: [1, 12], 10: 13, 11: [1, 14], 12: 4, 17: $V3, 18: $V4, 20: $V5, 22: $V6, 23: $V7, 24: 20, 25: 21, 26: $V8, 27: $V9, 28: $V1 }, { 1: [2, 2] }, { 14: 25, 15: [1, 26], 31: $Va }, o([15, 31], [2, 22]), o($V2, [2, 8], { 1: [2, 1] }), o($V2, [2, 4]), { 7: 22, 10: 28, 12: 4, 17: $V3, 18: $V4, 20: $V5, 22: $V6, 23: $V7, 24: 20, 25: 21, 26: $V8, 27: $V9, 28: $V1 }, o($V2, [2, 6]), o($V2, [2, 7]), o($V2, [2, 11]), { 19: [1, 29] }, { 21: [1, 30] }, o($V2, [2, 14]), o($V2, [2, 15]), o($V2, [2, 16]), o($V2, [2, 17]), o($V2, [2, 18]), o($V2, [2, 19]), o($V2, [2, 20]), { 11: [1, 31] }, { 16: 32, 30: [1, 33] }, { 11: [2, 24] }, o($V2, [2, 5]), o($V2, [2, 12]), o($V2, [2, 13]), o($Vb, [2, 9]), { 14: 34, 31: $Va }, { 31: [2, 23] }, { 11: [1, 35] }, o($Vb, [2, 10])],\n    defaultActions: { 5: [2, 21], 7: [2, 2], 27: [2, 24], 33: [2, 23] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            this.begin(\"open_directive\");\n            return 28;\n          case 1:\n            this.begin(\"type_directive\");\n            return 29;\n          case 2:\n            this.popState();\n            this.begin(\"arg_directive\");\n            return 15;\n          case 3:\n            this.popState();\n            this.popState();\n            return 31;\n          case 4:\n            return 30;\n          case 5:\n            break;\n          case 6:\n            break;\n          case 7:\n            return 11;\n          case 8:\n            break;\n          case 9:\n            break;\n          case 10:\n            return 4;\n          case 11:\n            return 17;\n          case 12:\n            this.begin(\"acc_title\");\n            return 18;\n          case 13:\n            this.popState();\n            return \"acc_title_value\";\n          case 14:\n            this.begin(\"acc_descr\");\n            return 20;\n          case 15:\n            this.popState();\n            return \"acc_descr_value\";\n          case 16:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 17:\n            this.popState();\n            break;\n          case 18:\n            return \"acc_descr_multiline_value\";\n          case 19:\n            return 23;\n          case 20:\n            return 27;\n          case 21:\n            return 26;\n          case 22:\n            return 6;\n          case 23:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:%%\\{)/i, /^(?:((?:(?!\\}%%)[^:.])*))/i, /^(?::)/i, /^(?:\\}%%)/i, /^(?:((?:(?!\\}%%).|\\n)*))/i, /^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:timeline\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?::\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"open_directive\": { \"rules\": [1], \"inclusive\": false }, \"type_directive\": { \"rules\": [2, 3], \"inclusive\": false }, \"arg_directive\": { \"rules\": [3, 4], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [17, 18], \"inclusive\": false }, \"acc_descr\": { \"rules\": [15], \"inclusive\": false }, \"acc_title\": { \"rules\": [13], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 22, 23], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet currentSection = \"\";\nlet currentTaskId = 0;\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\nconst getCommonDb = () => commonDb;\nconst parseDirective = (statement, context, type) => {\n  parseDirective$1(globalThis, statement, context, type);\n};\nconst clear = function() {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = \"\";\n  rawTasks.length = 0;\n  clear$1();\n};\nconst addSection = function(txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\nconst getSections = function() {\n  return sections;\n};\nconst getTasks = function() {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n  tasks.push(...rawTasks);\n  return tasks;\n};\nconst addTask = function(period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : []\n  };\n  rawTasks.push(rawTask);\n};\nconst addEvent = function(event) {\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  currentTask.events.push(event);\n};\nconst addTaskOrg = function(descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: []\n  };\n  tasks.push(newTask);\n};\nconst compileTasks = function() {\n  const compileTask = function(pos) {\n    return rawTasks[pos].processed;\n  };\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\nconst timelineDb = {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent,\n  parseDirective\n};\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addEvent,\n  addSection,\n  addTask,\n  addTaskOrg,\n  clear,\n  default: timelineDb,\n  getCommonDb,\n  getSections,\n  getTasks,\n  parseDirective\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst MAX_SECTIONS = 12;\nconst drawRect = function(elem, rectData) {\n  const rectElem = elem.append(\"rect\");\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.y);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", rectData.width);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (rectData.class !== void 0) {\n    rectElem.attr(\"class\", rectData.class);\n  }\n  return rectElem;\n};\nconst drawFace = function(element, faceData) {\n  const radius = 15;\n  const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\n  const face = element.append(\"g\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  function smile(face2) {\n    const arc$1 = arc().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\n  }\n  function sad(face2) {\n    const arc$1 = arc().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\n  }\n  function ambivalent(face2) {\n    face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\n  }\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n  return circleElement;\n};\nconst drawCircle = function(element, circleData) {\n  const circleElement = element.append(\"circle\");\n  circleElement.attr(\"cx\", circleData.cx);\n  circleElement.attr(\"cy\", circleData.cy);\n  circleElement.attr(\"class\", \"actor-\" + circleData.pos);\n  circleElement.attr(\"fill\", circleData.fill);\n  circleElement.attr(\"stroke\", circleData.stroke);\n  circleElement.attr(\"r\", circleData.r);\n  if (circleElement.class !== void 0) {\n    circleElement.attr(\"class\", circleElement.class);\n  }\n  if (circleData.title !== void 0) {\n    circleElement.append(\"title\").text(circleData.title);\n  }\n  return circleElement;\n};\nconst drawText = function(elem, textData) {\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.text(nText);\n  return textElem;\n};\nconst drawLabel = function(elem, txtObject) {\n  function genPoints(x, y, width, height, cut) {\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n  }\n  const polygon = elem.append(\"polygon\");\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr(\"class\", \"labelBox\");\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\nconst drawSection = function(elem, section, conf) {\n  const g = elem.append(\"g\");\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"journey-section section-type-\" + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"journey-section section-type-\" + section.num },\n    conf,\n    section.colour\n  );\n};\nlet taskCount = -1;\nconst drawTask = function(elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append(\"g\");\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score\n  });\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"task task-type-\" + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  task.x + 14;\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"task\" },\n    conf,\n    task.colour\n  );\n};\nconst drawBackgroundRect = function(elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: \"rect\"\n  });\n  rectElem.lower();\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    \"text-anchor\": \"start\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0\n  };\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: \"start\",\n    height: 100,\n    rx: 0,\n    ry: 0\n  };\n};\nconst _drawTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append(\"switch\");\n    const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf) {\n    return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst initGraphics = function(graphics) {\n  graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\n};\nfunction wrap(text, width) {\n  text.each(function() {\n    var text2 = select(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(\" \").trim());\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n        line.pop();\n        tspan.text(line.join(\" \").trim());\n        if (word === \"<br>\") {\n          line = [\"\"];\n        } else {\n          line = [word];\n        }\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n      }\n    }\n  });\n}\nconst drawNode = function(elem, node, fullSection, conf) {\n  const section = fullSection % MAX_SECTIONS - 1;\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  nodeElem.attr(\n    \"class\",\n    (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section)\n  );\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n  textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n  defaultBkg(bkgElem, node, section);\n  return node;\n};\nconst getVirtualNodeHeight = function(elem, node, conf) {\n  const textElem = elem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\nconst defaultBkg = function(elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\n    \"d\",\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\n  );\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst svgDraw = {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight\n};\nconst draw = function(text, id, version, diagObj) {\n  var _a, _b, _c, _d;\n  const conf = getConfig();\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\n  (_b = (_a = diagObj.db).clear) == null ? void 0 : _b.call(_a);\n  diagObj.parser.parse(text + \"\\n\");\n  log.debug(\"timeline\", diagObj.db);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? (\n    // @ts-ignore d3 types are wrong\n    select(sandboxElement.nodes()[0].contentDocument.body)\n  ) : select(\"body\");\n  const svg = root.select(\"#\" + id);\n  svg.append(\"g\");\n  const tasks2 = diagObj.db.getTasks();\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug(\"task\", tasks2);\n  svgDraw.initGraphics(svg);\n  const sections2 = diagObj.db.getSections();\n  log.debug(\"sections\", sections2);\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  let masterY = 50;\n  sectionBeginY = 50;\n  let sectionNumber = 0;\n  let hasSections = true;\n  sections2.forEach(function(section) {\n    const sectionNode = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug(\"sectionHeight before draw\", sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug(\"tasks.length\", tasks2.length);\n  for (const [i, task] of tasks2.entries()) {\n    const taskNode = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug(\"taskHeight before draw\", taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n  log.debug(\"maxSectionHeight before draw\", maxSectionHeight);\n  log.debug(\"maxTaskHeight before draw\", maxTaskHeight);\n  if (sections2 && sections2.length > 0) {\n    sections2.forEach((section) => {\n      const tasksForSection = tasks2.filter((task) => task.section === section);\n      const sectionNode = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\n        padding: 20,\n        maxHeight: maxSectionHeight\n      };\n      log.debug(\"sectionNode\", sectionNode);\n      const sectionNodeWrapper = svg.append(\"g\");\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug(\"sectionNode output\", node);\n      sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\n      masterY += maxSectionHeight + 50;\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks2,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n  const box = svg.node().getBBox();\n  log.debug(\"bounds\", box);\n  if (title) {\n    svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\n  }\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n  const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n  lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\n  setupGraphViewbox(\n    void 0,\n    svg,\n    ((_c = conf.timeline) == null ? void 0 : _c.padding) ?? 50,\n    ((_d = conf.timeline) == null ? void 0 : _d.useMaxWidth) ?? false\n  );\n};\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\n  var _a;\n  for (const task of tasks2) {\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    log.debug(\"taskNode\", taskNode);\n    const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    log.debug(\"taskHeight after draw\", taskHeight);\n    taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n    if (task.events) {\n      const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\n      let lineLength = maxTaskHeight;\n      masterY += 100;\n      lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n      lineWrapper.append(\"line\").attr(\"x1\", masterX + 190 / 2).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 190 / 2).attr(\n        \"y2\",\n        masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120\n      ).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\n    }\n    masterX = masterX + 200;\n    if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) {\n      sectionColor++;\n    }\n  }\n  masterY = masterY - 10;\n};\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  for (const event of events) {\n    const eventNode = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50\n    };\n    log.debug(\"eventNode\", eventNode);\n    const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\nconst renderer = {\n  setConf: () => {\n  },\n  draw\n};\nconst genSections = (options) => {\n  let sections2 = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections2 += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options[\"cScaleLabel\" + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections2;\n};\nconst getStyles = (options) => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","parcelHelpers","defineInteropFlag","export","diagram","_mermaidB0Ad2De1Js","_d3","_khroma","parser","o","k","v","o2","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","push","getCommonDb","setDiagramTitle","substr","trim","setAccTitle","setAccDescription","addSection","addTask","addEvent","parseDirective","replace","table","defaultActions","parseError","str","hash","recoverable","error","parse","input","stack","tstack","vstack","lstack","args","slice","arguments","lexer2","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","yyval","lex","token","pop","Array","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","Parser","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","currentSection","currentTaskId","sections","tasks","rawTasks","I","statement","context","type","J","clear","txt","getSections","getTasks","allItemsProcessed","compileTasks","iterationCount","period","event","rawTask","section","task","score","events","currentTask","find","addTaskOrg","descr","newTask","description","classes","allProcessed","entries","processed","db","freeze","__proto__","default","Symbol","toStringTag","value","drawRect","elem","rectData","rectElem","append","attr","y","fill","stroke","width","height","rx","ry","class","drawFace","element","faceData","circleElement","cx","cy","face","radius","smile","face2","arc$1","arc","startAngle","PI","endAngle","innerRadius","outerRadius","sad","ambivalent","drawText","textData","nText","textElem","style","anchor","span","textMargin","taskCount","getNoteRect","_drawTextCandidateFunc","byText","content","g","textAttrs","colour","_setTextAttrs","byTspan","conf","taskFontSize","taskFontFamily","dy","byFo","body","f","toText","fromTextAttrsDict","key","textPlacement","wrap","each","word","text2","select","words","reverse","parseFloat","tspan","j","node","getComputedTextLength","lineHeight","defaultBkg","svgDraw","drawCircle","circleData","pos","title","drawSection","rect","num","drawLabel","txtObject","polygon","cut","labelMargin","drawTask","center","drawBackgroundRect","bounds","startx","starty","stopx","stopy","lower","getTextObj","initGraphics","graphics","drawNode","fullSection","nodeElem","bkgElem","bbox","getBBox","fontSize","padding","max","maxHeight","getVirtualNodeHeight","remove","drawTasks","diagram2","tasks2","sectionColor","masterX","masterY","maxTaskHeight","maxEventCount","maxEventLineLength","maxSectionHeight","isWithoutSections","_a","taskNode","number","debug","taskWrapper","taskHeight","lineWrapper","drawEvents","timeline","disableMulticolor","maxEventHeight","eventBeginY","eventNode","eventWrapper","eventHeight","genSections","sections2","THEME_COLOR_LIMIT","isDark","lighten","darken","sw","renderer","setConf","draw","version","diagObj","_b","_c","_d","sandboxElement","LEFT_MARGIN","leftMargin","securityLevel","root","nodes","contentDocument","svg","getDiagramTitle","depthY","sectionBeginY","sectionNumber","hasSections","forEach","sectionNode","sectionHeight","maxEventLineLengthTemp","tasksForSection","filter","sectionNodeWrapper","box","useMaxWidth","styles","git0","gitBranchLabel0"],"version":3,"file":"timeline-definition-5ed366f4.8b7b0e52.js.map"}